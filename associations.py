import random
import json
import os

# –§–∞–π–ª –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∞—Å—Å–æ—Ü–∏–∞—Ü–∏–π
FILE_NAME = "associations.json"

# –ë–∞–∑–æ–≤—ã–µ –∞—Å—Å–æ—Ü–∏–∞—Ü–∏–∏
default_associations = {
    "–∫–æ—Ç": ["–º–æ–ª–æ–∫–æ", "–º—è—É", "—à–µ—Ä—Å—Ç—å", "—Å–æ–Ω", "–æ—Ö–æ—Ç–∞"],
    "—Å–æ–ª–Ω—Ü–µ": ["–∂–∞—Ä–∞", "–¥–µ–Ω—å", "–ª–µ—Ç–æ", "–ª—É—á–∏", "—ç–Ω–µ—Ä–≥–∏—è"],
    "–∫–Ω–∏–≥–∞": ["—á—Ç–µ–Ω–∏–µ", "–∑–Ω–∞–Ω–∏–µ", "–∏—Å—Ç–æ—Ä–∏—è", "—Å—Ç—Ä–∞–Ω–∏—Ü—ã", "–∞–≤—Ç–æ—Ä"],
    "–¥–æ—Ä–æ–≥–∞": ["–º–∞—à–∏–Ω–∞", "–ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ", "–∞—Å—Ñ–∞–ª—å—Ç", "–¥–≤–∏–∂–µ–Ω–∏–µ", "—Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ"],
    "–º—É–∑—ã–∫–∞": ["–º–µ–ª–æ–¥–∏—è", "–ø–µ—Å–Ω—è", "–∑–≤—É–∫", "—Ä–∏—Ç–º", "–∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç"]
}


def load_associations():
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç –∞—Å—Å–æ—Ü–∏–∞—Ü–∏–∏ –∏–∑ —Ñ–∞–π–ª–∞, –µ—Å–ª–∏ –æ–Ω —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –∏–Ω–∞—á–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ."""
    if os.path.exists(FILE_NAME):
        with open(FILE_NAME, "r", encoding="utf-8") as file:
            return json.load(file)
    return default_associations


def save_associations():
    """–°–æ—Ö—Ä–∞–Ω—è–µ—Ç —Ç–µ–∫—É—â–∏–µ –∞—Å—Å–æ—Ü–∏–∞—Ü–∏–∏ –≤ —Ñ–∞–π–ª."""
    with open(FILE_NAME, "w", encoding="utf-8") as file:
        json.dump(associations, file, ensure_ascii=False, indent=4)


def find_association(word):
    """–ò—â–µ—Ç —Å–ª—É—á–∞–π–Ω—É—é –∞—Å—Å–æ—Ü–∏–∞—Ü–∏—é –∫ –≤–≤–µ–¥–µ–Ω–Ω–æ–º—É —Å–ª–æ–≤—É"""
    word = word.lower().strip()
    if word in associations:
        return random.choice(associations[word])
    return None


def add_association(word, new_association):
    """–î–æ–±–∞–≤–ª—è–µ—Ç –Ω–æ–≤—É—é –∞—Å—Å–æ—Ü–∏–∞—Ü–∏—é –∫ —Å–ª–æ–≤—É"""
    word = word.lower().strip()
    new_association = new_association.lower().strip()

    if word in associations:
        if new_association not in associations[word]:
            associations[word].append(new_association)
    else:
        associations[word] = [new_association]

    save_associations()  # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è


# –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ
associations = load_associations()

print("–í–≤–µ–¥–∏—Ç–µ —Å–ª–æ–≤–æ, –∏ —è –Ω–∞–π–¥—É –∫ –Ω–µ–º—É –∞—Å—Å–æ—Ü–∏–∞—Ü–∏—é! (–ù–∞–ø–∏—à–∏—Ç–µ '–≤—ã—Ö–æ–¥' –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è)")
while True:
    user_input = input("\n–í–≤–µ–¥–∏—Ç–µ —Å–ª–æ–≤–æ: ").strip().lower()

    if user_input == "–≤—ã—Ö–æ–¥":
        print("–î–æ –≤—Å—Ç—Ä–µ—á–∏! üòä")
        break

    association = find_association(user_input)

    if association:
        print(f"–ê—Å—Å–æ—Ü–∏–∞—Ü–∏—è: {association}")
    else:
        print("–Ø –ø–æ–∫–∞ –Ω–µ –∑–Ω–∞—é –∞—Å—Å–æ—Ü–∏–∞—Ü–∏–π –∫ —ç—Ç–æ–º—É —Å–ª–æ–≤—É...")
        new_association = input("–í–≤–µ–¥–∏—Ç–µ –∞—Å—Å–æ—Ü–∏–∞—Ü–∏—é –∫ —ç—Ç–æ–º—É —Å–ª–æ–≤—É: ").strip()
        if new_association:
            add_association(user_input, new_association)
            print(f"–î–æ–±–∞–≤–ª–µ–Ω–æ! –¢–µ–ø–µ—Ä—å '{user_input}' –∞—Å—Å–æ—Ü–∏–∏—Ä—É–µ—Ç—Å—è —Å '{new_association}' üòä")