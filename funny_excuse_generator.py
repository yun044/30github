import random

categories = {
    "default": {
        "reasons": [
            "Мой кот случайно", "Будильник неожиданно", "Дорога на работу внезапно",
            "Инопланетяне на секунду", "Мой компьютер внезапно", "Соседский попугай случайно"
        ],
        "actions": [
            "устроил пожар в ванной", "перемотал время назад", "исчез в параллельной вселенной",
            "запер меня в квартире", "захватил интернет-соединение", "объявил меня своим богом"
        ],
        "endings": [
            "и мне пришлось разбираться.", "поэтому я не смог выйти вовремя.",
            "и это заняло больше времени, чем ожидалось.", "так что мне пришлось объяснять это полиции.",
            "и теперь я немного опоздал.", "но, к счастью, всё закончилось хорошо."
        ]
    },
    "work": {
        "reasons": [
            "Система обновлений Windows", "В лифте неожиданно", "Директор компании внезапно",
            "Важный звонок", "Мой автомобиль"
        ],
        "actions": [
            "решила обновиться прямо перед выходом", "застрял между этажами",
            "потребовал срочной встречи", "оказался от робота", "не завелся утром"
        ],
        "endings": [
            "и мне пришлось ждать техподдержку.", "поэтому я не смог прийти вовремя.",
            "и это заняло дольше, чем я думал.", "что вызвало небольшие задержки.",
            "но всё закончилось хорошо, я уже в пути!"
        ]
    },
    "study": {
        "reasons": [
            "Мой принтер", "Учебник", "Мой одногруппник", "Преподаватель"
        ],
        "actions": [
            "зажевал реферат", "был украден собакой", "забыл напомнить про контрольную",
            "дал дополнительное задание за 5 минут до пары"
        ],
        "endings": [
            "и пришлось срочно всё переписывать.", "поэтому я задержался.",
            "что заняло кучу времени.", "и мне пришлось срочно все решать."
        ]
    }
}

def generate_excuse(category="default"):
    if category not in categories:
        category = "default"
    data = categories[category]
    return f"{random.choice(data['reasons'])} {random.choice(data['actions'])} {random.choice(data['endings'])}"

# Запрос у пользователя, какую оправдание он хочет
print("Выберите категорию оправдания: (default / work / study)")
user_choice = input(">>> ").strip().lower()

# Генерируем 3 варианта на выбор
print("\nВозможные оправдания:")
for _ in range(3):
    print("-", generate_excuse(user_choice))